"""empty message

Revision ID: 34b334c32239
Revises: 
Create Date: 2024-02-28 08:39:07.736620

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '34b334c32239'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('difficulty', sa.PickleType(), nullable=True),
    sa.Column('nonverbal', sa.PickleType(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('domain',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(length=64), nullable=True),
    sa.Column('domain', sa.String(length=2), nullable=True),
    sa.Column('attn1', sa.Integer(), nullable=True),
    sa.Column('attn2', sa.Integer(), nullable=True),
    sa.Column('attn3', sa.Integer(), nullable=True),
    sa.Column('use1', sa.Integer(), nullable=True),
    sa.Column('use2', sa.Integer(), nullable=True),
    sa.Column('use3', sa.Integer(), nullable=True),
    sa.Column('understanding', sa.Integer(), nullable=True),
    sa.Column('engagement_short_answer', sa.PickleType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('domain', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_domain_timestamp'), ['timestamp'], unique=False)

    op.create_table('in_person_condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trials', sa.PickleType(), nullable=True),
    sa.Column('trial_1', sa.PickleType(), nullable=True),
    sa.Column('trial_2', sa.PickleType(), nullable=True),
    sa.Column('trial_3', sa.PickleType(), nullable=True),
    sa.Column('trial_4', sa.PickleType(), nullable=True),
    sa.Column('trial_5', sa.PickleType(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('online_condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('trials', sa.PickleType(), nullable=True),
    sa.Column('feedback_type', sa.PickleType(), nullable=True),
    sa.Column('no_feedback_trial', sa.PickleType(), nullable=True),
    sa.Column('feedback_trial', sa.PickleType(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trial',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.String(length=64), nullable=True),
    sa.Column('duration_ms', sa.Float(), nullable=True),
    sa.Column('domain', sa.String(length=2), nullable=True),
    sa.Column('interaction_type', sa.String(length=20), nullable=True),
    sa.Column('iteration', sa.Integer(), nullable=True),
    sa.Column('subiteration', sa.Integer(), nullable=True),
    sa.Column('likert', sa.Integer(), nullable=True),
    sa.Column('moves', sa.PickleType(), nullable=True),
    sa.Column('coordinates', sa.PickleType(), nullable=True),
    sa.Column('is_opt_response', sa.Boolean(), nullable=True),
    sa.Column('mdp_parameters', sa.PickleType(), nullable=True),
    sa.Column('human_model_pf_pos', sa.PickleType(), nullable=True),
    sa.Column('human_model_pf_weights', sa.PickleType(), nullable=True),
    sa.Column('improvement_short_answer', sa.PickleType(), nullable=True),
    sa.Column('reward_ft_weights', sa.PickleType(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('trial', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_trial_timestamp'), ['timestamp'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('condition_id', sa.Integer(), nullable=True),
    sa.Column('online_condition_id', sa.Integer(), nullable=True),
    sa.Column('in_person_condition_id', sa.Integer(), nullable=True),
    sa.Column('study_type', sa.PickleType(), nullable=True),
    sa.Column('code', sa.String(length=20), nullable=True),
    sa.Column('feedback_counts', sa.PickleType(), nullable=True),
    sa.Column('consent', sa.Integer(), nullable=True),
    sa.Column('training', sa.Integer(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.Integer(), nullable=True),
    sa.Column('ethnicity', sa.PickleType(), nullable=True),
    sa.Column('education', sa.Integer(), nullable=True),
    sa.Column('robot', sa.Integer(), nullable=True),
    sa.Column('browser', sa.String(length=256), nullable=True),
    sa.Column('final_robot_choice', sa.Integer(), nullable=True),
    sa.Column('final_feedback', sa.PickleType(), nullable=True),
    sa.Column('num_trials_completed', sa.Integer(), nullable=True),
    sa.Column('attention_check', sa.Integer(), nullable=True),
    sa.Column('study_completed', sa.Integer(), nullable=True),
    sa.Column('curr_progress', sa.String(length=50), nullable=True),
    sa.Column('loop_condition', sa.String(length=4), nullable=True),
    sa.Column('final_test_condition', sa.Integer(), nullable=True),
    sa.Column('domain_1', sa.String(length=2), nullable=True),
    sa.Column('domain_2', sa.String(length=2), nullable=True),
    sa.Column('domain_3', sa.String(length=2), nullable=True),
    sa.Column('interaction_type', sa.String(length=20), nullable=True),
    sa.Column('iteration', sa.Integer(), nullable=True),
    sa.Column('subiteration', sa.Integer(), nullable=True),
    sa.Column('control_stack', sa.PickleType(), nullable=True),
    sa.Column('curr_trial_idx', sa.Integer(), nullable=True),
    sa.Column('group', sa.String(length=50), nullable=True),
    sa.Column('pf_model', sa.PickleType(), nullable=True),
    sa.Column('params_stack', sa.PickleType(), nullable=True),
    sa.Column('visited_env_traj_idxs_stack', sa.PickleType(), nullable=True),
    sa.Column('final_test_rand_idxs', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['condition_id'], ['condition.id'], ),
    sa.ForeignKeyConstraint(['in_person_condition_id'], ['in_person_condition.id'], ),
    sa.ForeignKeyConstraint(['online_condition_id'], ['online_condition.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    op.create_table('demo',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('round_num', sa.Integer(), nullable=True),
    sa.Column('demo_num', sa.Integer(), nullable=True),
    sa.Column('card_num', sa.Integer(), nullable=True),
    sa.Column('correct_bin', sa.Integer(), nullable=True),
    sa.Column('rule_set', sa.PickleType(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('demo', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_demo_timestamp'), ['timestamp'], unique=False)

    op.create_table('survey',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('round_num', sa.Integer(), nullable=True),
    sa.Column('frustration', sa.Integer(), nullable=True),
    sa.Column('utility_of_feedback', sa.Integer(), nullable=True),
    sa.Column('ease_of_teaching', sa.Integer(), nullable=True),
    sa.Column('opt_text', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('survey', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_survey_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('survey', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_survey_timestamp'))

    op.drop_table('survey')
    with op.batch_alter_table('demo', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_demo_timestamp'))

    op.drop_table('demo')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))

    op.drop_table('user')
    with op.batch_alter_table('trial', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_trial_timestamp'))

    op.drop_table('trial')
    op.drop_table('online_condition')
    op.drop_table('in_person_condition')
    with op.batch_alter_table('domain', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_domain_timestamp'))

    op.drop_table('domain')
    op.drop_table('condition')
    # ### end Alembic commands ###
